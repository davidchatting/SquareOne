//	DJC:	Created 9th March 2000.package uk.ac.bham.cs.djc.ui;import java.awt.event.ActionListener;import java.awt.event.ActionEvent;import java.net.URL;import java.awt.Dimension;import javax.swing.JPanel;import java.awt.BorderLayout;import uk.ac.bham.cs.djc.*;/**	The application's progress panel. * 	Informs the user of the progress of parsing the media files. * 	UNIMPLEMENTED. * 	 * 	<a href="ProgressPanel.java">Source code</a> * 	@author David Chatting (djc@cs.bham.ac.uk) *	@version Created 9th March 2000 */public class ProgressPanel extends JPanel implements ActionListener{    /**	The image panel - displays image */    protected ImagePanel thisImagePanel=null;        /**	Create a new ProgressPanel object      * 	@param theApplication reference to the Application object (the top level window)     */    public ProgressPanel(Application theApplication) {	theApplication.addListener(this);		try {	    //Create and add the image panel:	    thisImagePanel=new ImagePanel(new URL("file:///image.gif"));	    add(thisImagePanel,BorderLayout.CENTER);	    setSize(thisImagePanel.getSize());	    setVisible(true);	}	catch(java.net.MalformedURLException murle) {	    System.out.println(murle.toString());	}    }        /**	Gets the size of this component     *  @param 	prevCreatedDimen a previously allocated Dimension object into which the result will be placed,     *  	if null the result is a newly allocated Dimension object     *	@return	A Dimension object that indicates the size of this component     */    public Dimension getSize(Dimension prevCreatedDimen) {	Dimension result=null;	Dimension panelSize=thisImagePanel.getSize();		if(prevCreatedDimen!=null) {	    prevCreatedDimen.setSize(panelSize);	    result=prevCreatedDimen;	}	else result=new Dimension(panelSize);		return(result);    }        /**	Resizes this component     *	@param newDimension the new dimensions     */    public void setSize(Dimension newDimension) {	setSize(newDimension.width,newDimension.height);    }        /**	Sets the size of this component     *	@param width the new width     *	@param height the new height     */    public void setSize(int width,int height) {	super.setSize(width,height);    }        /**	Required for the implementation of the ActionListener interface, to allow object to listen to Application events	     * 	Is invoked when an event is fired on one of the class with which this listener is registered     *	@param	ActionEvent the event catch by this listener     */    public void actionPerformed(ActionEvent event) {    }}