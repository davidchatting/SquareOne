//	DJC:	Created 9th March 2000.package uk.ac.bham.cs.djc.ui;import java.awt.Panel;import java.awt.Toolkit;import java.awt.Graphics;import java.awt.Image;import java.awt.Color;import java.net.URL;import java.awt.Dimension;import java.net.MalformedURLException;import java.util.Vector;import uk.ac.bham.cs.djc.*;/**	Panel in which a JPEG/GIF image file can be displayed. * 	 * 	<a href="ImagePanel.java">Source code</a> * 	@author David Chatting (djc@cs.bham.ac.uk) *	@version Created 9th March 2000 */public class ImagePanel extends Panel{    /**	The displayed image */    private Image thisImage=null;        /**	Columns to highlight */    Vector columnsToHightlight=new Vector();        /**	Create a new ImagePanel      *	@param	newImage the image to display     */    public ImagePanel(Image newImage) {	thisImage=newImage;    }        /**	Create a new ImagePanel      *	@param	imageLocation the URL of the image to display     */    public ImagePanel(URL imageLocation) {	//Get the image:	try {	    thisImage = Toolkit.getDefaultToolkit().getImage(imageLocation);	}	catch(Exception e) {	}    }        /**	Create a new ImagePanel      *	@param	imageLocation the URL of the image to display as a string     */    public ImagePanel(String imageLocation) throws MalformedURLException{	this(new URL(imageLocation));    }        /**	Highlight a column in the image      *	@param	coloumn the column to highlight     */    public void highlightColumn(int column) {	columnsToHightlight.addElement(new Integer(column));    }       /**	Paint this component - drawing the image in the panel     *	@param	g the Graphics context     */   public void paint(Graphics g) {       super.paint(g);              paintComponent(g);   }        /**	Paint this component - drawing the image in the panel     *	@param	g the Graphics context     */    public void paintComponent(Graphics g) {        //Draw image:        g.drawImage(thisImage, 0, 0, this);		//Draw highlights:	for(int index=0;index<columnsToHightlight.size();index++) {	    	int x=((Integer)columnsToHightlight.elementAt(index)).intValue();		int height=thisImage.getHeight(null);				g.setColor(Color.red);		g.drawLine(x,0,x,height);	}    }        /**	Information about the image has become available     * 	Extends imageUpdate behaviour of super class, which is implemented for ImageObserver interface     * 	@return	This method should return true if further updates are needed or false if the required information has been acquired     */    public boolean imageUpdate(Image img,int infoflags,int x,int y,int width,int height) {    	boolean result=super.imageUpdate(img,infoflags,x,y,width,height);		//if(Request information is available):	if(!result) {	    //Set the size of the panel:	    //setSize(getSize(null));	}		return(result);    }}