//DJC 28th March 2000package uk.ac.bham.cs.djc.ui;import uk.ac.bham.cs.djc.MatchReportFileParser;import uk.ac.bham.cs.djc.mediaDescriptors.TemporalMediaBlock;import java.net.URL;import java.net.URLConnection;import javax.swing.JFrame;import javax.swing.JFileChooser;import java.net.MalformedURLException;import java.util.Vector;import javax.swing.JSplitPane;import javax.swing.JButton;import javax.swing.JTextArea;import javax.swing.JScrollPane;import java.awt.event.WindowAdapter;import java.awt.event.WindowEvent;import java.io.*;/**	Application to demonstrate football match report parsing * 	 * 	<a href="NewspaperDemo.java">Source code</a> * 	@author David Chatting (djc@cs.bham.ac.uk) *	@version Created 28th March 2000 */public class NewspaperDemo extends JFrame{    /**	Scroll panel*/    private JScrollPane scrollPane=null;        /**	Panel to display the full article */    private JTextArea articlePanel=null;        /**	Panel to display the results */    private JTextArea resultsPanel=null;        /**	Make this an executable class     * 	@param	args the arguments passed to the application - none currently accepted     * 	@exception	Exception if a new NewspaperDemo can't be instantiated     */    public static void main(String[] args) throws Exception{	new NewspaperDemo();    }        /**	Make a new instance of the NewspaperDemo class     * 	@exception	Exception if a new NewspaperDemo can't be instantiated     */    public NewspaperDemo() throws Exception{	super("NewspaperDemo");		//Open a file chooser:	URL newspaperURL=openFileChooser();		//Make this window quit the application is closed:	addListener();		//Make a new MatchReportFileParser:	MatchReportFileParser parser;	parser=new MatchReportFileParser(newspaperURL,null);		//Set-up the article panel:	articlePanel=new JTextArea();	articlePanel.setLineWrap(true);	articlePanel.setSize(300,300);	articlePanel.setVisible(true);		//Set-up the results panel:	resultsPanel=new JTextArea();	resultsPanel.setLineWrap(true);	resultsPanel.setSize(300,300);	resultsPanel.setVisible(true);		//Make the panels scrollable:	JSplitPane splitPane=new JSplitPane(JSplitPane.HORIZONTAL_SPLIT,articlePanel,resultsPanel);	splitPane.setVisible(true);	scrollPane=new JScrollPane(splitPane); 	setVisible(true);		getContentPane().add(scrollPane);		//Display the article:	displayArticle(newspaperURL);		//Display the results:	printResults(parser.getAllMediaBlocks());    }        /**	Make this window quit the application is closed     */    public void addListener() {    	//Add listener for window events:	addWindowListener(new WindowAdapter () {		public void windowClosing (WindowEvent e) {			System.exit(0);		}					public void windowClosed (WindowEvent e) {			System.exit(0);		}	});    }        /**	Open a file chooser dialog     * 	@return	the URL of the choosen file     */    public URL openFileChooser() {	URL URLtoReturn=null;	boolean urlIsGood=false;		//Get a file chooser starting at the root:        final JFileChooser fc = new JFileChooser(System.getProperty("file.separator"));		String localPath=null;		//Show dialog:	int returnVal = fc.showOpenDialog(NewspaperDemo.this);	do {		if (returnVal == JFileChooser.APPROVE_OPTION) {			localPath=(fc.getSelectedFile()).toString();		}				//Make the file into a URL:		try {			URLtoReturn=new URL("file://" + localPath);			urlIsGood=true;		}		catch(MalformedURLException mue) {		    	urlIsGood=false;		}	}	while(!urlIsGood);		return(URLtoReturn);    }        /**	Print the results to the results panel     * 	@param	results a vector of the results to display (TemporalMediaBlocks)     */    public void printResults(Vector results) {	for(int i=0;i<results.size();i++) {	    TemporalMediaBlock event=(TemporalMediaBlock)results.elementAt(i);	    	    int eventTime=(event.getPeriodOfMedia().getStart()/60000)+1;	    	    resultsPanel.append(new Integer(eventTime).toString() + " minutes");	    resultsPanel.append("\n");	    resultsPanel.append(new String(event.getDescription()));	    resultsPanel.append("\n\n");			}    }        /**	Display the artcle in the display panel     * 	@param	newspaperURL the location of the artcle     * 	@exception Exception if can't open article     */    public void displayArticle(URL newspaperURL) throws Exception {	//Try to open match report file (might throw IOException):	URLConnection thisConnection = newspaperURL.openConnection();        DataInputStream in = new DataInputStream(thisConnection.getInputStream());	BufferedReader d = new BufferedReader(new InputStreamReader(in));		String currentLine;	do {		//Get the next line:                currentLine=d.readLine();		if(currentLine!=null) {		    //Append the new line:		    articlePanel.append(currentLine);		    articlePanel.append("\n");		}      	} while(currentLine!=null);    }}