//10th January 2000package uk.ac.bham.cs.djc.ui;//	Implementation of FootballMoviePlayer using the JMF//	Not currently implemented - must remove references to QT for javaimport quicktime.app.display.QTCanvas;import quicktime.app.display.QTDrawable;import quicktime.std.movies.Movie;import quicktime.QTException;import uk.ac.bham.cs.djc.time.Period;import java.awt.Dimension;/**	Football MPEG movie player using Sun's Jave Media Framework (JMF) * 	UNIMPLEMENTED * 	 * 	<a href="JMFFootballMoviePlayer.java">Source code</a> * 	@author David Chatting (djc@cs.bham.ac.uk) *	@version Created 10th January 2000 */public class JMFFootballMoviePlayer extends FootballMoviePlayer{    	/**	Create a new JMFFootballMoviePlayer	 * 	@param	movieURL the path of the movie file	 */    	public JMFFootballMoviePlayer(String movieURL) {	    super(movieURL);    	}    	/**	Set the movie to play from the URL specified	 *	@param	theURL the URL of the movie to set	 *	@exception Exception if there is a problem opening this movie for playing	 */	public void setMovie(String theURL,int startTime) throws Exception{	    movieStartTime=startTime;	}		/**	Get the canvas	 * 	@return the canvas	 */	public QTCanvas getCanvas () {	    QTCanvas canvasToReturn=null;	    return(canvasToReturn);	}		/**	Get the player	 * 	@return	the player	 */	public QTDrawable getPlayer () {	    QTDrawable drawableToReturn=null;	    return(drawableToReturn);	}		/**	Stop the video playing	 */	public void stopPlayer() {	}		/**	Get the movie	 * 	@return the movie	 */	public Movie getMovie () {	    Movie movieToReturn=null;	    return(movieToReturn);	}		/**	Close the FootballMoviePlayer	 */	public static void close() {	}		/**	Select this video clip so that next time the movie is played only this selection is seen     	 * 	@param clipToPlay the clip to play     	 * 	@exception Exception if the clip can't be played     	 */	public void selectClip(Period periodToPlay) throws Exception{	}		/**	Get the size of this movie	 * 	@return	the dimensions of this movie	 */	public Dimension getSize() {	    return(new Dimension(0,0));	}		/**	Get the current time from the begining of the video	 *	@return	the relative time	 *	@exception Exception if can't obtain the relative time	 */	public int getRelativeTime() throws Exception{	    int result=0;	    	    return(result);	}}