/* Generated by Together *///20th November 1999 - DJCpackage uk.ac.bham.cs.djc.mediaDescriptors;import java.io.Serializable;import java.net.URL;/**	Most abstract description of media * 	 * 	<a href="MediaBlock.java">Source code</a> * 	@author David Chatting (djc@cs.bham.ac.uk) *	@version Created 20th November 1999 */public abstract class MediaBlock implements Serializable{    /**	Reference to some external resource associated with the specific subclass of MediaBlock */    protected URL externalResource=null;        /**	Create a new MediaBlock */    public MediaBlock() {    }        /**	Create a new MediaBlock from a second MediaBlock     * 	@param	secondMediaBlock the other MediaBlock from which to copy     */    public MediaBlock(MediaBlock secondMediaBlock) {	try {		URL otherExternalResource=secondMediaBlock.getExternalResource();		setExternalResource(otherExternalResource);	}	catch(Exception e) {	    	//The secondMediaBlock doesn't have an ExternalResource	}    }        /**	Get the reference to some external resource associated with the specific subclass of MediaBlock     * 	@return	the URL of this external source     * 	@throws Exception if there is no external resource available for this object     */    public URL getExternalResource() throws Exception{	if(externalResource==null) {	    throw new Exception("No external resource available for " + externalResource);	}	return(externalResource);    }        /**	Set the reference to some external resource associated with the specific subclass of MediaBlock     * 	@param	newExternalResource the new value of the external resource     */    public void setExternalResource(URL newExternalResource) {	externalResource=newExternalResource;    }}