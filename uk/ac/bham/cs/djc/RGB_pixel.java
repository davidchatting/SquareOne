//9th February 2000package uk.ac.bham.cs.djc;import java.awt.Point;/**	A pixel described in the RGB colour space * 	 * 	<a href="RGB_pixel.java">Source code</a> * 	@author David Chatting (djc@cs.bham.ac.uk) *	@version Created 9th February 2000 */public class RGB_pixel{    	private int red=0;    	private int green=0;    	private int blue=0;    		/**	The location of this pixel in the image */	private Point location=null;		/**	Make a new RGB_pixel object at this location	 * 	@param	r the red component	 * 	@param	g the green component	 * 	@param	b the blue component	 * 	@param	x the x coordinate of the pixel's location	 * 	@param	y the y coordinate of the pixel's location	 * 	@exception Exception if r,g or b are not in the range 0-255	 */	public RGB_pixel(int r, int g, int b, int x,int y) throws Exception{		this(r,g,b,new Point(x,y));	}		/**	Make a new RGB_pixel object at this location	 * 	@param	r the red component	 * 	@param	g the green component	 * 	@param	b the blue component	 * 	@param	newLocation the pixel's location	 * 	@exception	Exception if r,g or b are not in the range 0-255	 */    	public RGB_pixel(int r, int g, int b, Point newLocation) throws Exception{		setRed(r);		setGreen(g);		setBlue(b);				setLocation(newLocation);    	}		/**	Make a new RGB_pixel object by copying another	 * 	@param	anotherPixel the existing RGB_pixel object to copy	 * 	@exception	Exception will never be thrown	 */	public RGB_pixel(RGB_pixel anotherPixel) throws Exception{	    this(anotherPixel.getRed(),anotherPixel.getGreen(),anotherPixel.getBlue(),new Point(anotherPixel.getLocation()));	}    	/**	Get the red component	 * 	@return	the red component (0-255)	 */    	public int getRed() {		return(red);    	}	    	/**	Get the green component	 * 	@return	the green component (0-255)	 */    	public int getGreen() {		return(green);    	}    	/**	Get the blue component	 * 	@return	the blue component (0-255)	 */    	public int getBlue() {		return(blue);    	}		/**	Get the intensity of this pixel	 * 	@return	the intensity (0-255)	 */	public int getIntensity() {	    int intensity=(red+green+blue)/3;	    return(intensity);	}		/**	Get the value of the least significant component	 * 	@return	the value of the least significant component	 */	public int getLeastSigComponent() {	    int leastSigComponent=red;	    if(leastSigComponent>green) leastSigComponent=green;	    if(leastSigComponent>blue) leastSigComponent=blue;	    	    return(leastSigComponent);	}			/**	Set the red component	 * 	@param	r the red component (0-255)	 * 	@exception	Exception if the red component is not in the range (0-255)	 */   	public void setRed(int r) throws Exception{		setComponent('r',r);    	}    		/**	Set the green component	 * 	@param	g the green component (0-255)	 * 	@exception	Exception if the green component is not in the range (0-255)	 */    	public void setGreen(int g) throws Exception{		setComponent('g',g);    	}    		/**	Set the blue component	 * 	@param	b the green component (0-255)	 * 	@exception	Exception if the blue component is not in the range (0-255)	 */    	public void setBlue(int b) throws Exception{		setComponent('b',b);    	}		/**	Set the named component	 * 	@param	component to set (r,g or b)	 * 	@param	value the value of this component	 * 	@exception	Exception if component specifies an unknown component	 * 	@exception	Exception if the component's value is not in the range (0-255)	 */	private void setComponent(char component,int value) throws Exception{		if(value>=0 && value<256) {		   switch(component) {		   	case'r':red=value;break;		   	case'g':green=value;break;		   	case'b':blue=value;break;		   	default:throw new Exception("No such component as " + component);		   }		}		else throw new Exception((new Integer(value)).toString() + " is out of range 0-255");	}		/**	Set the location of this pixel	 * 	@param	newLocation the location for this pixel	 */	public void setLocation(Point newLocation) {	    	location=newLocation;	}		/**	Get the location of this pixel	 * 	@return	the location of this pixel	 */	public Point getLocation() {	    	return(location);	}		/**	Get a string representation of this pixel	 * 	@return	a string representation of this pixel	 */	public String toString() {	    	String stringToReturn=new String();	    			stringToReturn+="r:	" + getRed();		stringToReturn+=", g:	" + getGreen();		stringToReturn+=", b:	" + getBlue();				stringToReturn+="	At: " + location.toString();				return(stringToReturn);	}}