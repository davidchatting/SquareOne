/* Generated by Together *///20th November 1999 - DJCpackage uk.ac.bham.cs.djc;import java.net.URL;import uk.ac.bham.cs.djc.MPEG_Play.*;import uk.ac.bham.cs.djc.mediaDescriptors.VideoBlock;import uk.ac.bham.cs.djc.time.Period;import uk.ac.bham.cs.djc.time.TimeLine;/**	Football-movie file parser * 	Should determine movie file type and instigate correct parser, * 	currently only looks at MPEG movies<p> * 	 * 	<a href="FootballMovieFileParser.java">Source code</a> * 	@author David Chatting (djc@cs.bham.ac.uk) *	@version Created 20th November 1999 */public class FootballMovieFileParser extends FootballMovieFile {    /**	FootballMPEGMovieParser used to parse movie */    protected FootballMPEGMovieParser thisMPEG_movie=null;    /**	Thread in which movie is parsed */    protected static Thread movieParsingThread;        /**	Constructor      *	newLocation - URL of this movie file     *	Throws IOException if there are problems with I/O on this movie     */    public FootballMovieFileParser(URL newLocation) throws java.io.IOException{	super(newLocation);		initialise();    }        /**	Constructor      *	newLocation - URL of this movie file     *	newOptions - options associated with this file     *	Throws IOException if there are problems with I/O on this movie     */    public FootballMovieFileParser(URL newLocation,String newOptions) throws java.io.IOException{	super(newLocation,newOptions);		initialise();    }        /**	*/    protected void initialise() throws java.io.IOException{	//Set the start time of this movie:	setStartTimeFromOptions();		//Make new FootballMPEGMovieParser:	thisMPEG_movie=FootballMPEGMovieParser.newFootballMPEGMovieParser(location,startTime);		//Start a new thread to parse the MPEG movie:	movieParsingThread = new Thread(thisMPEG_movie);	movieParsingThread.start();		try {	    //Make new VideoBlock for the period of video:	    Period periodOfVideo=new Period(startTime,startTime+thisMPEG_movie.getDurationOfVideo());	    	    VideoBlock video=new VideoBlock(periodOfVideo,thisMPEG_movie.getFrameRateOfVideo(),location);	    	    //Add to list of media blocks found in this movie:	    addMediaBlock(video);	}	catch(Exception e) {	    System.out.println("FootballMovieFileParser(URL):	" + e);	}    }        /**	*/    protected void setStartTimeFromOptions() {	int indexOfMin=options.indexOf("min");		//Want at least one character in front of "min":	if(indexOfMin>=1) {	    try {		String numbers=options.substring(0,indexOfMin);		startTime=Integer.parseInt(numbers)*60000;	    }	    catch(NumberFormatException nfe) {	    }	}	System.out.println("Start Time is: " + startTime);    }        /**	Parse a subsequence of the video     * 	sequenceToParse - Timeline object which describes the sequences to parse     * 	Throws IOException if there are problems with I/O on this movie     */    public void parseVideoSequence(TimeLine sequenceToParse) throws java.io.IOException{	thisMPEG_movie=FootballMPEGMovieParser.newFootballMPEGMovieParser(location,startTime);		movieParsingThread = new Thread(thisMPEG_movie);	movieParsingThread.start();		System.gc();	//Try and tidy-up!		thisMPEG_movie.parseVideoSequence(sequenceToParse);		//Should really reset the stream here!    }        //Make these abstract?    /*    public Period getDurationOfVideo() {	return(new Period());    }        public Period getDurationOfAudio() {	return(new Period());    }    */}